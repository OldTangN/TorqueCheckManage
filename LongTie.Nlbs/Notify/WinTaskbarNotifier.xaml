<tn:TaskbarNotifier x:Class="LongTie.Nlbs.Notify.WinTaskbarNotifier"
    xmlns:tn="clr-namespace:WPFTaskbarNotifier;assembly=WPFTaskbarNotifier"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    Title="WPF Taskbar Notifier Example" Height="360"  Width="500"
    x:Name="ThisControl"
    >
    <tn:TaskbarNotifier.Resources>

        <Style x:Key="dgheader" TargetType="DataGridColumnHeader" >
            <Setter Property="HorizontalContentAlignment" Value="Center"   ></Setter>
        </Style>

        <Style x:Key="dgCell" TargetType="TextBlock">
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter  Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>
        <DataTemplate x:Key="ItemsTemplate">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <DataGrid Grid.Row="0" ItemsSource="{Binding Path=Wrench}" Height="300"
                          CanUserAddRows="False" RowHeaderWidth="0" AutoGenerateColumns="False"  Margin="0" Name="dataGrid1" AlternationCount="2" AlternatingRowBackground="#f0fff0">
                    <DataGrid.Background>
                        <ImageBrush ImageSource="/LongTie.Nlbs;component/Images/bg_table2.png"/>
                    </DataGrid.Background>
                    <DataGrid.Columns>
                        <DataGridTextColumn IsReadOnly="True"  Binding="{Binding wrenchbarcode}"  Header="扳手编号" Width="120" HeaderStyle="{StaticResource dgheader}" ElementStyle="{StaticResource dgCell}" />
                        <DataGridTextColumn IsReadOnly="True"  Binding="{Binding lastrepairtime}"  Header="最近维护时间" Width="160" HeaderStyle="{StaticResource dgheader}" ElementStyle="{StaticResource dgCell}"/>
                        <DataGridTextColumn IsReadOnly="True"  Binding="{Binding intime}"  Header="到期时间" Width="120" HeaderStyle="{StaticResource dgheader}" ElementStyle="{StaticResource dgCell}"/>                   
                        <DataGridTextColumn IsReadOnly="True"  Binding="{Binding cycletime}"  Header="有效时长(天)" Width="80" HeaderStyle="{StaticResource dgheader}" ElementStyle="{StaticResource dgCell}"/>
                    </DataGrid.Columns>
                </DataGrid>




                <!--<Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0" Margin="0,5,0,0" VerticalAlignment="Top" Orientation="Horizontal">
                    <TextBlock  Text="{Binding Path=Title}" />
                    <TextBlock Text=": " />
                </StackPanel>
                <Label Grid.Column="1" Margin="0,-1,0,0" HorizontalAlignment="Left" ToolTip="Click to open">
                    <Hyperlink Click="Item_Click" Tag="{Binding}">
                        <TextBlock Text="{Binding Path=Message}" TextWrapping="Wrap" />
                    </Hyperlink>
                </Label>-->
            </Grid>
        </DataTemplate>

    </tn:TaskbarNotifier.Resources>

    <Border BorderThickness="1" BorderBrush="#fff1efe2">
        <Border BorderThickness="1" BorderBrush="#ffffffff">
            <Border BorderThickness="1" BorderBrush="#ffd4d0c8">
                <Grid Margin="5,5,5,5">
                    <Grid.RowDefinitions>

                        <RowDefinition Height="40" />
                        <RowDefinition Height="5" />
                        <RowDefinition Height="300"  />
                        <RowDefinition Height="5" />
                    </Grid.RowDefinitions>

                    <Label Grid.Row="0" Margin="8,0,8,0" FontSize="25" FontWeight="Bold" Content="即将到期维护的扳手">
                        <Label.Foreground>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="Blue" Offset="0"/>
                                <GradientStop Color="Red" Offset="1"/>
                            </LinearGradientBrush>
                        </Label.Foreground>
                    </Label>

                    <Button Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Top" Width="15" Height="15" Click="HideButton_Click">
                        <Button.ToolTip>Hide</Button.ToolTip>
                        <Image>
                            <Image.Source>
                                <DrawingImage>
                                    <DrawingImage.Drawing>
                                        <GeometryDrawing>
                                            <GeometryDrawing.Pen>
                                                <Pen Brush="Black" Thickness="3"/>
                                            </GeometryDrawing.Pen>
                                            <GeometryDrawing.Geometry >
                                                <GeometryGroup>
                                                    <LineGeometry StartPoint="0,0" EndPoint="20,20"/>
                                                    <LineGeometry StartPoint="20,0" EndPoint="0,20"/>
                                                </GeometryGroup>
                                            </GeometryDrawing.Geometry>
                                        </GeometryDrawing>
                                    </DrawingImage.Drawing>
                                </DrawingImage>
                            </Image.Source>
                        </Image>
                    </Button>

                    <Path Grid.Row="3" Stretch="Fill" Margin="0,0,0,0" VerticalAlignment="Top" Height="1" Data="M0,64 L608,64">
                        <Path.Stroke>
                            <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5" MappingMode="RelativeToBoundingBox" SpreadMethod="Repeat">
                                <GradientStop Color="White" Offset="0"/>
                                <GradientStop Color="Blue" Offset="0.1"/>
                                <GradientStop Color="Red" Offset="0.9"/>
                                <GradientStop Color="White" Offset="1"/>
                            </LinearGradientBrush>
                        </Path.Stroke>
                    </Path>

                    <ScrollViewer Grid.Row="2" VerticalScrollBarVisibility="Auto" Height="300">
                        <ItemsControl Name="ItemsList"  BorderThickness="0"
                       ItemsSource="{Binding ElementName=ThisControl, Path=NotifyContent}"
                       ItemTemplate="{StaticResource ItemsTemplate}" Height="300">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Vertical" Width="Auto"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>                  
                    </ScrollViewer>

                    <Path Grid.Row="1" Stretch="Fill" Margin="0,0,0,0" VerticalAlignment="Top" Height="1" Data="M0,64 L608,64">
                        <Path.Stroke>
                            <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5" MappingMode="RelativeToBoundingBox" SpreadMethod="Repeat">
                                <GradientStop Color="White" Offset="0"/>
                                <GradientStop Color="Blue" Offset="0.1"/>
                                <GradientStop Color="Red" Offset="0.9"/>
                                <GradientStop Color="White" Offset="1"/>
                            </LinearGradientBrush>
                        </Path.Stroke>
                    </Path>

                </Grid>

            </Border>
        </Border>
    </Border>
</tn:TaskbarNotifier>
